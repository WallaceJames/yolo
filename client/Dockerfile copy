## Stage 1: Build
FROM node:18-alpine AS build

# Setting the working directory inside the container
WORKDIR /usr/src/app

# Copying package.json and package-lock.json to the container
COPY package*.json ./

# Installing dependencies
RUN npm install

# Copying the rest of the application code
COPY . .

# Set NODE_OPTIONS to allow legacy OpenSSL algorithms
ENV NODE_OPTIONS=--openssl-legacy-provider

# Building the application
RUN npm run build

# Stage 2: Serve
FROM nginx:alpine

# Copy the build output from the build stage to the Nginx container
COPY --from=build /usr/src/app/build /usr/share/nginx/html

# Install additional packages to increase image size (optional)
RUN apk add --no-cache curl vim

# Expose the port the app runs on
EXPOSE 80

# Command to run Nginx
CMD ["nginx", "-g", "daemon off;"]

#MUTLISTAGE BUILDS SCRIPT.